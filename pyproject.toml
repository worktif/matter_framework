[build-system]
requires = ["setuptools>=77", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "matter_framework"
version = "4.1.1"
description = "We present a technical validation for complete, testable cosmological framework in which the Universe begins in a globally coherent quantum state and the first local act of decoherence inside the closed system creates its own environment."
readme = { file = "README.rst", content-type = "text/x-rst" }
requires-python = ">=3.8"
license = "Apache-2.0"
license-files = ["LICENSE"]
authors = [
    { name = "Raman Marozau", email = "raman@worktif.com" }
]
keywords = ["Self-generated environment", "environment", "quantum", "decoherence", "entanglement", "stressâ€“energy", "primordial power spectrum"]
classifiers = [
    "Typing :: Typed",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows"
]
dependencies = [
    "contourpy~=1.3.3",
    "cycler~=0.12.1",
    "fonttools~=4.60.1",
    "kiwisolver~=1.4.9",
    "matplotlib~=3.10.7",
    "numpy~=2.3.3",
    "packaging~=25.0",
    "pandas~=2.3.3",
    "pillow~=11.3.0",
    "pip~=23.2.1",
    "pyparsing~=3.2.5",
    "pytz~=2025.2",
    "setuptools~=68.2.0",
    "six~=1.17.0",
    "tzdata~=2025.2",
    "wheel~=0.41.20",
    "setuptools~=65.5.1",
    "pytest~=8.3.5",
]

[tool.setuptools]
packages = ["matter_framework"]

[project.urls]
Homepage = "https://github.com/worktif/matter_framework"
Documentation = "https://github.com/worktif/matter_framework#README.md"

[project.optional-dependencies]
dev = ["pytest", "flake8", "black", "coverage", " pytest-mock"]